/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import DAO.TiendaDAO;
import entidades.Fabricante;
import entidades.Producto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import servicios.FabricanteService;
import servicios.ProductoServicio;

/**
 *
 * @author Joaquin
 */
public class inicio extends javax.swing.JFrame {

    FabricanteService fs = new FabricanteService();
    ProductoServicio ps = new ProductoServicio();
    agregarFrame af = new agregarFrame();
    seleccionFrame sf = new seleccionFrame();
    editar ef = new editar();
    eliminar e = new eliminar();
    protected String codigo;

    /**
     * Creates new form inicio
     */
    public inicio() {
        initComponents();
        setLocation(400, 100);
        llenarTablaProductos();
        llenarTablaFabricantes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelGeneral = new javax.swing.JTabbedPane();
        productosPanel = new javax.swing.JScrollPane();
        productosTable = new javax.swing.JTable();
        fabricantesPane = new javax.swing.JScrollPane();
        fabricantesTable = new javax.swing.JTable();
        busquedaPanel = new javax.swing.JPanel();
        boxProductos = new javax.swing.JCheckBox();
        boxFabricantes = new javax.swing.JCheckBox();
        buscadorText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        contenedorBusqueda = new javax.swing.JScrollPane();
        tablaBusqueda = new javax.swing.JTable();
        limpiarB = new javax.swing.JButton();
        buscarBoton = new javax.swing.JButton();
        agregarB = new javax.swing.JButton();
        actualizarB = new javax.swing.JButton();
        eliminarBoton = new javax.swing.JButton();
        editarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tienda");
        setResizable(false);

        productosPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productosPanelFocusGained(evt);
            }
        });

        productosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "codigo", "nombre", "precio", "codigo_fabricante"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Byte.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productosTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productosTableFocusGained(evt);
            }
        });
        productosPanel.setViewportView(productosTable);

        panelGeneral.addTab("Productos", productosPanel);

        fabricantesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        fabricantesPane.setViewportView(fabricantesTable);

        panelGeneral.addTab("Fabricantes", fabricantesPane);

        boxProductos.setText("Productos");
        boxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProductosActionPerformed(evt);
            }
        });

        boxFabricantes.setText("Fabricantes");
        boxFabricantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxFabricantesActionPerformed(evt);
            }
        });

        buscadorText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscadorTextActionPerformed(evt);
            }
        });
        buscadorText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscadorTextKeyReleased(evt);
            }
        });

        jLabel1.setText("Nombre:");

        contenedorBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contenedorBusquedaMouseClicked(evt);
            }
        });

        tablaBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "codigo", "Nombre", "Precio", "Codigo fabricante"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tablaBusquedaFocusGained(evt);
            }
        });
        tablaBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBusquedaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaBusquedaMouseReleased(evt);
            }
        });
        contenedorBusqueda.setViewportView(tablaBusqueda);

        limpiarB.setText("Limpiar");
        limpiarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBActionPerformed(evt);
            }
        });

        buscarBoton.setText("Buscar");
        buscarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout busquedaPanelLayout = new javax.swing.GroupLayout(busquedaPanel);
        busquedaPanel.setLayout(busquedaPanelLayout);
        busquedaPanelLayout.setHorizontalGroup(
            busquedaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(busquedaPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(busquedaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscadorText, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(busquedaPanelLayout.createSequentialGroup()
                        .addComponent(limpiarB)
                        .addGap(58, 58, 58)
                        .addComponent(buscarBoton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(busquedaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxFabricantes)
                    .addComponent(boxProductos))
                .addContainerGap())
            .addComponent(contenedorBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        busquedaPanelLayout.setVerticalGroup(
            busquedaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(busquedaPanelLayout.createSequentialGroup()
                .addGroup(busquedaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(busquedaPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(boxProductos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boxFabricantes))
                    .addGroup(busquedaPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscadorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(busquedaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(limpiarB)
                            .addComponent(buscarBoton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(contenedorBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelGeneral.addTab("Buscar", busquedaPanel);

        agregarB.setText("Agregar");
        agregarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBActionPerformed(evt);
            }
        });

        actualizarB.setText("Actualizar");
        actualizarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBActionPerformed(evt);
            }
        });

        eliminarBoton.setText("Eliminar");
        eliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBotonActionPerformed(evt);
            }
        });

        editarBoton.setText("Editar");
        editarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editarBoton)
                .addGap(18, 18, 18)
                .addComponent(eliminarBoton)
                .addGap(18, 18, 18)
                .addComponent(actualizarB)
                .addGap(18, 18, 18)
                .addComponent(agregarB)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarB)
                    .addComponent(actualizarB)
                    .addComponent(eliminarBoton)
                    .addComponent(editarBoton))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productosTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productosTableFocusGained

    }//GEN-LAST:event_productosTableFocusGained

    private void agregarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBActionPerformed
        af.setVisible(true);
    }//GEN-LAST:event_agregarBActionPerformed

    private void productosPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productosPanelFocusGained

    }//GEN-LAST:event_productosPanelFocusGained

    private void actualizarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBActionPerformed
        llenarTablaProductos();
        llenarTablaFabricantes();
    }//GEN-LAST:event_actualizarBActionPerformed

    public void busqueda() {

        if (boxProductos.isSelected()) {
            String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
            String info[][] = obtenerResultadoBusquedaP();
            tablaBusqueda = new JTable(info, titulos);
            contenedorBusqueda.setViewportView(tablaBusqueda);
        }/*VER PORQUE NO BUSCA EN PRODUCTOS, HACER UN METODO DE BUSQUEDA PARA CADA TABLA*/
        if (boxFabricantes.isSelected()) {
            String titulos[] = {"codigo", "nombre"};
            String infoF[][] = obtenerResultadoBusquedaF();
            tablaBusqueda = new JTable(infoF, titulos);
            contenedorBusqueda.setViewportView(tablaBusqueda);
        }

    }


    private void boxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProductosActionPerformed
        if (boxFabricantes.isSelected()) {
            boxFabricantes.setSelected(false);

        }
        if (tablaBusqueda.getColumnCount() < 4) {
            TableColumn tc = new TableColumn();
            TableColumn tc1 = new TableColumn();
            tc.setHeaderValue("Precio");
            tc1.setHeaderValue("Codigo Fabricante");
            tablaBusqueda.addColumn(tc);
            tablaBusqueda.addColumn(tc1);
        }

        if (boxProductos.isSelected()) {
            String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
            String info[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(info, titulos);
            contenedorBusqueda.setViewportView(tablaBusqueda);
        }


    }//GEN-LAST:event_boxProductosActionPerformed

    private void boxFabricantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxFabricantesActionPerformed
        if (boxProductos.isSelected()) {
            boxProductos.setSelected(false);

        }
        if (tablaBusqueda.getColumnCount() > 2) {
            TableColumnModel tcm = tablaBusqueda.getColumnModel();
            TableColumn columnaABorrar = tcm.getColumn(2);
            TableColumn columnaABorrar2 = tcm.getColumn(3);

            tablaBusqueda.removeColumn(columnaABorrar);
            tablaBusqueda.removeColumn(columnaABorrar2);
        }
        if (boxFabricantes.isSelected()) {
            String titulosF[] = {"codigo", "nombre"};
            String infoF[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(infoF, titulosF);
            contenedorBusqueda.setViewportView(tablaBusqueda);
        }
    }//GEN-LAST:event_boxFabricantesActionPerformed

    private void buscadorTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscadorTextActionPerformed

    }//GEN-LAST:event_buscadorTextActionPerformed

    private void buscadorTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscadorTextKeyReleased
        busqueda();
    }//GEN-LAST:event_buscadorTextKeyReleased

    private void limpiarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBActionPerformed
        buscadorText.setText("");
        if (boxProductos.isSelected()) {
            String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
            String info[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(info, titulos);
            contenedorBusqueda.setViewportView(tablaBusqueda);
        }
        if (boxFabricantes.isSelected()) {
            String titulos[] = {"codigo", "nombre"};
            String infoF[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(infoF, titulos);
            contenedorBusqueda.setViewportView(tablaBusqueda);
        }

    }//GEN-LAST:event_limpiarBActionPerformed

    private void tablaBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBusquedaMouseClicked

    }//GEN-LAST:event_tablaBusquedaMouseClicked

    private void tablaBusquedaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBusquedaMouseReleased

    }//GEN-LAST:event_tablaBusquedaMouseReleased

    private void tablaBusquedaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaBusquedaFocusGained

    }//GEN-LAST:event_tablaBusquedaFocusGained

    private void contenedorBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contenedorBusquedaMouseClicked

    }//GEN-LAST:event_contenedorBusquedaMouseClicked

    public void infoBox(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, "Atencion: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    private void buscarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBotonActionPerformed
        if (boxFabricantes.isSelected()) {
            codigo = tablaBusqueda.getValueAt(tablaBusqueda.getSelectedRow(), 0) + "";
            System.out.println(codigo);
            sf.llenarTabla(codigo);
            sf.setVisible(true);
        } else if (boxProductos.isSelected()) {
            infoBox("Debe seleccionar la tabla fabricantes","Atencion");
        }
    }//GEN-LAST:event_buscarBotonActionPerformed

    private void editarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBotonActionPerformed
        ef.setVisible(true);
    }//GEN-LAST:event_editarBotonActionPerformed

    private void eliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBotonActionPerformed
        e.setVisible(true);
    }//GEN-LAST:event_eliminarBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.out.println("asda");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarB;
    private javax.swing.JButton agregarB;
    private javax.swing.JCheckBox boxFabricantes;
    private javax.swing.JCheckBox boxProductos;
    private javax.swing.JTextField buscadorText;
    private javax.swing.JButton buscarBoton;
    private javax.swing.JPanel busquedaPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane contenedorBusqueda;
    private javax.swing.JButton editarBoton;
    private javax.swing.JButton eliminarBoton;
    private javax.swing.JScrollPane fabricantesPane;
    private javax.swing.JTable fabricantesTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton limpiarB;
    private javax.swing.JTabbedPane panelGeneral;
    private javax.swing.JScrollPane productosPanel;
    private javax.swing.JTable productosTable;
    private javax.swing.JTable tablaBusqueda;
    // End of variables declaration//GEN-END:variables

    private void llenarTablaProductos() {
        String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
        String info[][] = obtenerTablaP();

        productosTable = new JTable(info, titulos);
        productosPanel.setViewportView(productosTable);
    }

    private String[][] obtenerTablaP() {
        TiendaDAO tdao = new TiendaDAO();

        ArrayList<Producto> productos = tdao.listarProductos("SELECT * FROM producto");

        String infoTabla[][] = new String[productos.size()][4];

        for (int i = 0; i < productos.size(); i++) {
            infoTabla[i][0] = productos.get(i).getCodigo() + "";
            infoTabla[i][1] = productos.get(i).getNombre() + "";
            infoTabla[i][2] = productos.get(i).getPrecio() + "";
            infoTabla[i][3] = productos.get(i).getCodigo_fabricante() + "";
        }

        return infoTabla;
    }

    private void llenarTablaFabricantes() {
        String titulos[] = {"codigo", "nombre"};
        String info[][] = obtenerTablaF();
        fabricantesTable = new JTable(info, titulos);
        fabricantesPane.setViewportView(fabricantesTable);
    }

    private String[][] obtenerTablaF() {
        TiendaDAO tdao = new TiendaDAO();

        ArrayList<Fabricante> fabricantes = tdao.listarFabricantes("SELECT * FROM fabricante");

        String infoTabla[][] = new String[fabricantes.size()][4];

        for (int i = 0; i < fabricantes.size(); i++) {
            infoTabla[i][0] = fabricantes.get(i).getCodigo() + "";
            infoTabla[i][1] = fabricantes.get(i).getNombre() + "";
        }

        return infoTabla;
    }

    public String[][] obtenerResultadoBusquedaF() {
        TiendaDAO tdao = new TiendaDAO();
        ArrayList<Fabricante> fabricantes = tdao.listarFabricantes("SELECT * FROM fabricante WHERE nombre LIKE '%" + buscadorText.getText() + "%'");
        String infoTabla[][] = new String[fabricantes.size()][2];

        for (int i = 0; i < fabricantes.size(); i++) {
            infoTabla[i][0] = fabricantes.get(i).getCodigo() + "";
            infoTabla[i][1] = fabricantes.get(i).getNombre() + "";
        }

        return infoTabla;
    }

    private String[][] obtenerResultadoBusquedaP() {
        TiendaDAO tdao = new TiendaDAO();
        ArrayList<Producto> productos = tdao.listarProductos("SELECT * FROM producto WHERE nombre LIKE '%" + buscadorText.getText() + "%'");
        String infoTablaP[][] = new String[productos.size()][4];
        for (int i = 0; i < productos.size(); i++) {
            infoTablaP[i][0] = productos.get(i).getCodigo() + "";
            infoTablaP[i][1] = productos.get(i).getNombre() + "";
            infoTablaP[i][2] = productos.get(i).getPrecio() + "";
            infoTablaP[i][3] = productos.get(i).getCodigo_fabricante() + "";
        }
        return infoTablaP;
    }

    private String[][] llenarTablaBusqueda() {
        TiendaDAO tdao = new TiendaDAO();
        String retorno[][] = null;
        if (boxFabricantes.isSelected()) {
            ArrayList<Fabricante> fabricantes = tdao.listarFabricantes("SELECT * FROM fabricante");
            String infoTabla[][] = new String[fabricantes.size()][2];

            for (int i = 0; i < fabricantes.size(); i++) {
                infoTabla[i][0] = fabricantes.get(i).getCodigo() + "";
                infoTabla[i][1] = fabricantes.get(i).getNombre() + "";
            }

            retorno = infoTabla;
        }

        if (boxProductos.isSelected()) {
            ArrayList<Producto> productos = tdao.listarProductos("SELECT * FROM producto");

            String infoTablaP[][] = new String[productos.size()][4];

            for (int i = 0; i < productos.size(); i++) {
                infoTablaP[i][0] = productos.get(i).getCodigo() + "";
                infoTablaP[i][1] = productos.get(i).getNombre() + "";
                infoTablaP[i][2] = productos.get(i).getPrecio() + "";
                infoTablaP[i][3] = productos.get(i).getCodigo_fabricante() + "";
            }

            retorno = infoTablaP;
        }

        return retorno;
    }

    private void verificarFila() {
        do {
            if (tablaBusqueda.isRowSelected(tablaBusqueda.getSelectedRow()) && busquedaPanel.isShowing()) {
                if (boxFabricantes.isSelected()) {
                    codigo = tablaBusqueda.getValueAt(tablaBusqueda.getSelectedRow(), 0) + "";
                    sf.llenarTabla(codigo);
                    sf.setVisible(true);
                    break;
                }
            }
            try {
                Thread.sleep(50);
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } while (true);
    }
}
