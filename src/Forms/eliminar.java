/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import DAO.TiendaDAO;
import entidades.Fabricante;
import entidades.Producto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Joaquin
 */
public class eliminar extends javax.swing.JFrame {

    /**
     * Creates new form eliminar
     */
    public eliminar() {
        initComponents();
        setLocation(500, 300);
        buttonGroup.add(boxProductos);
        buttonGroup.add(boxFabricantes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        contenedor = new javax.swing.JScrollPane();
        tablaBusqueda = new javax.swing.JTable();
        textBuscador = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        boxProductos = new javax.swing.JRadioButton();
        boxFabricantes = new javax.swing.JRadioButton();
        botonEliminar = new javax.swing.JButton();
        codigoBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cerrarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        tablaBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "codigo", "nombre", "precio", "codigo fab"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        contenedor.setViewportView(tablaBusqueda);

        textBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscadorActionPerformed(evt);
            }
        });
        textBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBuscadorKeyReleased(evt);
            }
        });

        jLabel1.setText("Nombre:");

        boxProductos.setText("Productos");
        boxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProductosActionPerformed(evt);
            }
        });

        boxFabricantes.setText("Fabricantes");
        boxFabricantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxFabricantesActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        codigoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Codigo:");

        cerrarBoton.setText("Cerrar");
        cerrarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cerrarBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonEliminar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(textBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(boxProductos)
                        .addComponent(boxFabricantes)
                        .addComponent(codigoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(31, 31, 31)
                .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codigoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(boxProductos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boxFabricantes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEliminar)
                    .addComponent(cerrarBoton))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscadorActionPerformed

    }//GEN-LAST:event_textBuscadorActionPerformed

    private void boxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProductosActionPerformed
        if (tablaBusqueda.getColumnCount() < 4) {
            TableColumn tc = new TableColumn();
            TableColumn tc1 = new TableColumn();
            tc.setHeaderValue("Precio");
            tc1.setHeaderValue("Codigo Fabricante");
            tablaBusqueda.addColumn(tc);
            tablaBusqueda.addColumn(tc1);
        }

        if (boxProductos.isSelected()) {
            String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
            String info[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(info, titulos);
            contenedor.setViewportView(tablaBusqueda);
        }
    }//GEN-LAST:event_boxProductosActionPerformed

    private void boxFabricantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxFabricantesActionPerformed
        if (tablaBusqueda.getColumnCount() > 2) {
            TableColumnModel tcm = tablaBusqueda.getColumnModel();
            TableColumn columnaABorrar = tcm.getColumn(2);
            TableColumn columnaABorrar2 = tcm.getColumn(3);

            tablaBusqueda.removeColumn(columnaABorrar);
            tablaBusqueda.removeColumn(columnaABorrar2);
        }
        if (boxFabricantes.isSelected()) {
            String titulosF[] = {"codigo", "nombre"};
            String infoF[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(infoF, titulosF);
            contenedor.setViewportView(tablaBusqueda);
        }
    }//GEN-LAST:event_boxFabricantesActionPerformed

    private void textBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscadorKeyReleased
        if (textBuscador.getText().equals("")) {
            if (boxProductos.isSelected()) {
                String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
                String info[][] = llenarTablaBusqueda();
                tablaBusqueda = new JTable(info, titulos);
                contenedor.setViewportView(tablaBusqueda);
            }

            if (boxFabricantes.isSelected()) {
                String titulosF[] = {"codigo", "nombre"};
                String infoF[][] = llenarTablaBusqueda();
                tablaBusqueda = new JTable(infoF, titulosF);
                contenedor.setViewportView(tablaBusqueda);
            }
        } else {
            busqueda();
        }
    }//GEN-LAST:event_textBuscadorKeyReleased

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void codigoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoBoxActionPerformed

    private void cerrarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarBotonActionPerformed
        setVisible(false);
        textBuscador.setText("");
        codigoBox.setText("");
    }//GEN-LAST:event_cerrarBotonActionPerformed

    public void eliminar() {
        /*PEDIMOS AL USUARIO CONFIRMACION*/
        if (infoBox("Desea eliminar el elemento?", "ATENCION") == JOptionPane.YES_OPTION) {
            TiendaDAO tdao = new TiendaDAO();
            if (boxProductos.isSelected()) {
                String query = "DELETE FROM producto WHERE codigo = " + codigoBox.getText();
                try {
                    tdao.editarAgregar(query);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
            }
            if (boxFabricantes.isSelected()) {
                String query = "DELETE FROM fabricante WHERE codigo = " + codigoBox.getText();
                try {
                    tdao.editarAgregar(query);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
            }
            infoBox2("Elemento eliminado", "Listo");
            textBuscador.setText("");
            codigoBox.setText("");
            actualizar();
        }

    }

    public void actualizar() {
        if (boxProductos.isSelected()) {
            String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
            String info[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(info, titulos);
            contenedor.setViewportView(tablaBusqueda);
        }
        if (boxFabricantes.isSelected()) {
            String titulos[] = {"codigo", "nombre"};
            String infoF[][] = llenarTablaBusqueda();
            tablaBusqueda = new JTable(infoF, titulos);
            contenedor.setViewportView(tablaBusqueda);
        }
    }

    /**
     *
     */
    public void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEliminar;
    private javax.swing.JRadioButton boxFabricantes;
    private javax.swing.JRadioButton boxProductos;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton cerrarBoton;
    private javax.swing.JTextField codigoBox;
    private javax.swing.JScrollPane contenedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable tablaBusqueda;
    private javax.swing.JTextField textBuscador;
    // End of variables declaration//GEN-END:variables

    private String[][] llenarTablaBusqueda() {
        TiendaDAO tdao = new TiendaDAO();
        String retorno[][] = null;
        if (boxFabricantes.isSelected()) {
            ArrayList<Fabricante> fabricantes = tdao.listarFabricantes("SELECT * FROM fabricante");
            String infoTabla[][] = new String[fabricantes.size()][2];

            for (int i = 0; i < fabricantes.size(); i++) {
                infoTabla[i][0] = fabricantes.get(i).getCodigo() + "";
                infoTabla[i][1] = fabricantes.get(i).getNombre() + "";
            }

            retorno = infoTabla;
        }

        if (boxProductos.isSelected()) {
            ArrayList<Producto> productos = tdao.listarProductos("SELECT * FROM producto");

            String infoTablaP[][] = new String[productos.size()][4];

            for (int i = 0; i < productos.size(); i++) {
                infoTablaP[i][0] = productos.get(i).getCodigo() + "";
                infoTablaP[i][1] = productos.get(i).getNombre() + "";
                infoTablaP[i][2] = productos.get(i).getPrecio() + "";
                infoTablaP[i][3] = productos.get(i).getCodigo_fabricante() + "";
            }

            retorno = infoTablaP;
        }

        return retorno;
    }

    private void busqueda() {
        if (boxProductos.isSelected()) {
            String titulos[] = {"codigo", "nombre", "precio", "codigo_fabricante"};
            String info[][] = obtenerResultadoBusquedaP();
            tablaBusqueda = new JTable(info, titulos);
            contenedor.setViewportView(tablaBusqueda);
        }/*VER PORQUE NO BUSCA EN PRODUCTOS, HACER UN METODO DE BUSQUEDA PARA CADA TABLA*/
        if (boxFabricantes.isSelected()) {
            String titulos[] = {"codigo", "nombre"};
            String infoF[][] = obtenerResultadoBusquedaF();
            tablaBusqueda = new JTable(infoF, titulos);
            contenedor.setViewportView(tablaBusqueda);
        }
    }

    private String[][] obtenerResultadoBusquedaP() {
        TiendaDAO tdao = new TiendaDAO();
        ArrayList<Producto> productos = tdao.listarProductos("SELECT * FROM producto WHERE nombre LIKE '%" + textBuscador.getText() + "%'");
        String infoTablaP[][] = new String[productos.size()][4];
        for (int i = 0; i < productos.size(); i++) {
            infoTablaP[i][0] = productos.get(i).getCodigo() + "";
            infoTablaP[i][1] = productos.get(i).getNombre() + "";
            infoTablaP[i][2] = productos.get(i).getPrecio() + "";
            infoTablaP[i][3] = productos.get(i).getCodigo_fabricante() + "";
        }
        return infoTablaP;

    }

    private String[][] obtenerResultadoBusquedaF() {
        TiendaDAO tdao = new TiendaDAO();
        ArrayList<Fabricante> fabricantes = tdao.listarFabricantes("SELECT * FROM fabricante WHERE nombre LIKE '%" + textBuscador.getText() + "%'");
        String infoTabla[][] = new String[fabricantes.size()][2];

        for (int i = 0; i < fabricantes.size(); i++) {
            infoTabla[i][0] = fabricantes.get(i).getCodigo() + "";
            infoTabla[i][1] = fabricantes.get(i).getNombre() + "";
        }

        return infoTabla;
    }

    public int infoBox(String infoMessage, String titleBar) {
        return JOptionPane.showConfirmDialog(null, infoMessage, titleBar, JOptionPane.YES_NO_OPTION);
    }

    public void infoBox2(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, "Atencion: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

}
